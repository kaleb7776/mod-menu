-- SERVIÇOS
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Camera = workspace.CurrentCamera

local WeaponFired = ReplicatedStorage:WaitForChild("WeaponsSystem"):WaitForChild("Network"):WaitForChild("WeaponFired")
local WeaponHit = ReplicatedStorage:WaitForChild("WeaponsSystem"):WaitForChild("Network"):WaitForChild("WeaponHit")

-- CONFIG
local FOV = 20
local wallCheck = true

-- Contagem de tiros por jogador
local shotCounters = {}
local deathConns = {}

-- Util: retorna parte de peito (HumanoidRootPart, UpperTorso, Torso)
local function getChestPart(character)
	if not character then return nil end
	return character:FindFirstChild("HumanoidRootPart")
		or character:FindFirstChild("UpperTorso")
		or character:FindFirstChild("Torso")
end

-- Wall check
local function temParede(origem, destino)
	local params = RaycastParams.new()
	params.FilterDescendantsInstances = {LocalPlayer.Character}
	params.FilterType = Enum.RaycastFilterType.Blacklist
	params.IgnoreWater = true

	local resultado = workspace:Raycast(origem, destino - origem, params)
	if resultado then
		for _, p in ipairs(Players:GetPlayers()) do
			if p.Character and resultado.Instance:IsDescendantOf(p.Character) then
				return false
			end
		end
		return true
	end
	return false
end

-- Melhor alvo dentro do FOV
local function getAlvo()
	local melhor, melhorDist
	melhorDist = math.huge
	local screenCenter = Vector2.new(Camera.ViewportSize.X/2, Camera.ViewportSize.Y/2)

	for _, p in ipairs(Players:GetPlayers()) do
		if p ~= LocalPlayer and p.Character then
			local hum = p.Character:FindFirstChildOfClass("Humanoid")
			if hum and hum.Health > 0 then
				local chest = getChestPart(p.Character)
				local head = p.Character:FindFirstChild("Head")
				local pos = chest and chest.Position or (head and head.Position)
				if pos then
					local screenPos, vis = Camera:WorldToViewportPoint(pos)
					if vis then
						local dist = (Vector2.new(screenPos.X, screenPos.Y) - screenCenter).Magnitude
						if dist <= FOV and dist < melhorDist then
							if not wallCheck or not temParede(Camera.CFrame.Position, pos) then
								melhorDist = dist
								melhor = p
							end
						end
					end
				end
			end
		end
	end
	return melhor
end

-- Reset contador quando alvo morre
local function bindDeath(player)
	if deathConns[player] then deathConns[player]:Disconnect() end
	if player.Character then
		local hum = player.Character:FindFirstChildOfClass("Humanoid")
		if hum then
			deathConns[player] = hum.Died:Connect(function()
				shotCounters[player] = 0
			end)
		end
	end
end

for _, pl in ipairs(Players:GetPlayers()) do
	shotCounters[pl] = 0
	pl.CharacterAdded:Connect(function() bindDeath(pl) end)
	if pl.Character then bindDeath(pl) end
end

Players.PlayerAdded:Connect(function(pl)
	shotCounters[pl] = 0
	pl.CharacterAdded:Connect(function() bindDeath(pl) end)
end)

Players.PlayerRemoving:Connect(function(pl)
	shotCounters[pl] = nil
	if deathConns[pl] then deathConns[pl]:Disconnect() end
end)

-- Envia hit fake
local function sendHit(arma, targetPart, position)
	if not arma or not targetPart or not position then return end
	local args = {
		arma,
		{
			p = position,
			pid = 1,
			part = targetPart,
			d = 0,
			maxDist = 100,
			h = targetPart,
			m = targetPart.Material or Enum.Material.Plastic,
			n = Vector3.new(0,1,0),
			t = 0.5,
			sid = 1
		},
		true
	}
	WeaponHit:FireServer(unpack(args))
end

-- PRINCIPAL: a cada tiro
WeaponFired.OnClientEvent:Connect(function()
	local arma = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildWhichIsA("Tool")
	if not arma then return end

	local alvo = getAlvo()
	if not alvo or not alvo.Character then return end
	local chest = getChestPart(alvo.Character)
	local head = alvo.Character:FindFirstChild("Head")

	shotCounters[alvo] = (shotCounters[alvo] or 0) + 1

	if shotCounters[alvo] >= 3 and head then
		-- 3º tiro vai na cabeça
		if not wallCheck or not temParede(Camera.CFrame.Position, head.Position) then
			sendHit(arma, head, head.Position)
			shotCounters[alvo] = 0
			return
		end
	end

	-- Senão, vai no peito
	if chest then
		if not wallCheck or not temParede(Camera.CFrame.Position, chest.Position) then
			sendHit(arma, chest, chest.Position)
		end
	end
end)
